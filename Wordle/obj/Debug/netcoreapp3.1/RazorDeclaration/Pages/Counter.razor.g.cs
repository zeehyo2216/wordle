// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Wordle.Pages
{
    #line hidden
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\zeehyo\Wordle\Wordle\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\zeehyo\Wordle\Wordle\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\zeehyo\Wordle\Wordle\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\zeehyo\Wordle\Wordle\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\zeehyo\Wordle\Wordle\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\zeehyo\Wordle\Wordle\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\zeehyo\Wordle\Wordle\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\zeehyo\Wordle\Wordle\_Imports.razor"
using Wordle;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\zeehyo\Wordle\Wordle\_Imports.razor"
using Wordle.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\zeehyo\Wordle\Wordle\Pages\Counter.razor"
using System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\zeehyo\Wordle\Wordle\Pages\Counter.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\zeehyo\Wordle\Wordle\Pages\Counter.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/wordle")]
    public partial class Counter : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 80 "D:\zeehyo\Wordle\Wordle\Pages\Counter.razor"
       
    public class Feedback
    {
        public char Letter { get; }
        public string Color { get; }

        public Feedback(char letter, string color)
        {
            Letter = letter;
            Color = color;
        }
    }

    private static readonly Random Random = new Random();

    private static string GenerateWord()
    {
        var words = File.ReadAllLines("./Pages/wordlist.txt");
        return words[Random.Next(words.Length)];
    }

    private static bool CheckWord(string word)
    {
        var words = File.ReadAllLines("./Pages/wordlist.txt");
        bool check = words.Any(w => w == word);

        return check;
    }

    private static Feedback[] CheckGuess(string word, string guess)
    {
        //var words1 = File.ReadAllLines("./Pages/wordlist.txt");
        if (word.Length != 5) return null;
        if (guess.Length != 5) return null;
        //if (!(words1.Contains(word))) return null;
        if (!CheckWord(guess)) return null;
        var result = new Feedback[word.Length];
        for (int i = 0; i < word.Length; i++)
        {
            if (guess[i] == word[i])
            {
                result[i] = new Feedback(guess[i], "#82E0AA");
            }
            else if (word.Contains(guess[i]))
            {
                result[i] = new Feedback(guess[i], "#F4D03F");
            }
            else
            {
                result[i] = new Feedback(guess[i], "white");
            }
        }
        return result;
    }

    //public string word = "skull";
    public string word = GenerateWord().Trim();
    public bool h = CheckWord("apple");
    public string guess;
    public int trial = 0;

    //Feedback def = new Feedback(' ', "black");

    Feedback[] feedback1 = new Feedback[] { new Feedback(' ', "black") };
    Feedback[] feedback2 = new Feedback[] { new Feedback(' ', "black") };
    Feedback[] feedback3 = new Feedback[] { new Feedback(' ', "black") };
    Feedback[] feedback4 = new Feedback[] { new Feedback(' ', "black") };
    Feedback[] feedback5 = new Feedback[] { new Feedback(' ', "black") };
    public string end;

    public string display = "inliine";
    public string display2 = "none";

    private void PlayGame()
    {
        if (guess == null) { return; }
        //var feedlist = new[] { feedback1, feedback2, feedback3, feedback4, feedback5 };
        var feedback = CheckGuess(word, guess);
        if (feedback == null)
        {
            end = "Invalid word. Check the number of letters.";
            return;
        }
        end = "";
        switch (trial)
        {
            case 0:
                feedback1 = feedback;
                break;
            case 1:
                feedback2 = feedback;
                break;
            case 2:
                feedback3 = feedback;
                break;
            case 3:
                feedback4 = feedback;
                break;
            case 4:
                feedback5 = feedback;
                break;
        }
        trial++;
        guess = null;
        if (trial > 4)
        {
            end = "Sorry, you ran out of guesses. The word was " + word;
            display = "none";
            display2 = "inliine";
        }

        

#line default
#line hidden
#nullable disable
#nullable restore
#line 198 "D:\zeehyo\Wordle\Wordle\Pages\Counter.razor"
           

    if (feedback.All(x => x.Color == "#82E0AA"))
    {
        end = "Congratulations, you guessed the word within " + trial + " trials!";
        display = "none";
        display2 = "inliine";
        return;
    }
}

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
